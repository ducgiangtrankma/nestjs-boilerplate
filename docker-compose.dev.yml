version: '3.8'

networks:
  my_network:

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile.dev  # Chạy Dockerfile.dev thay vì Dockerfile mặc định
    container_name: nestjs_app_dev
    restart: always
    ports:
      - "3000:3000"
      # - "0.0.0.0:3000:3000"  # Cho phép kết nối từ mọi thiết bị
    environment:
      - NODE_ENV=development
    env_file:
      - .env.development
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: sh -c "yarn install && yarn dev"  # Cài đặt dependencies trước khi chạy ứng dụng
    networks:
      - my_network

  mongodb:
    image: mongo:6
    container_name: mongodb_container_dev
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: userdatabase
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    volumes:
      - mongodb_data:/data/db
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis_container_dev
    restart: always
    ports:
      - "6379:6379"
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_container_dev
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongodb_data:
    driver: local
